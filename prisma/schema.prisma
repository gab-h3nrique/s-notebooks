// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// npx prisma migrate dev --preview-feature

// npx prisma init
// npx prisma generate 
// npx prisma migrate dev --name  init    ** atualizar migrate
// npx prisma migrate dev --name migrate's name    ** atualizar migrate
// npx prisma db push  

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Users {
  id           Int @id @default(autoincrement())
  name         String
  email        String  @unique
  password     String
  role         Int // 100 = adm // 200 = technician // 300 receptionist
  orders       Orders[] @relation("OrdersUser")
  shelfs       Shelf[] @relation("shelfUser")
  @@map("users")
}

model Clients {
  id           Int @id @default(autoincrement())
  name         String
  email        String @unique  
  document     String? 
  number       String?
  info         String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  orders       Orders[]
  @@map("clients")
}

model Shelf {
  id          Int @id
  type        String

  user        Users @relation("shelfUser", fields: [userId], references: [id])
  userId      Int

  // order       Orders? @relation("shelfOrder", fields: [orderId], references: [id])
  // orderId     Int? @unique
  order       Orders? @relation("shelfOrder")

  @@map("shelf")
}

model Orders {
  id           Int @id @default(autoincrement())
  status       String

  client       Clients @relation(fields: [clientId], references: [id])
  clientId     Int

  user         Users @relation("OrdersUser", fields: [userId], references: [id])
  userId       Int

  // shelf        Shelf[] @relation("shelfOrder")
  shelf        Shelf? @relation("shelfOrder", fields: [shelfId], references: [id])
  shelfId      Int? @unique

  model        String
  brand        String
  name         String?
  serialNumber String?

  charger      Boolean @default(false)
  battery      Boolean @default(false)
  energyCable  Boolean @default(false)
  bag          Boolean @default(false)
  others       String?

  warranty            Boolean @default(false)
  warrantyDescription String?

  backup            Boolean @default(false)
  backupDescription String?

  // isWorking           Boolean @default(true)
  // workingDescription  String?
  defectDescription   String?
  technicalReport     String?
  generalDescription  String?

  deliveryConfirmation Boolean @default(false)

  value               Float? @default(0.00)
  
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  @@map("orders")
}

